{"ast":null,"code":"var _jsxFileName = \"C:\\\\code\\\\app-librairie\\\\frontend\\\\src\\\\Pages\\\\Modifybook.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport '../Addbook.css'; // Import du fichier de style CSS\nimport axios from \"axios\"; // Import du module axios pour effectuer des requêtes HTTP\n\n// Fonction qui retourne la date et l'heure actuelles au format YYYY/MM/DD HH:MM:SS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getDate() {\n  const today = new Date();\n  const month = today.getMonth() + 1;\n  const year = today.getFullYear();\n  const date = today.getDate();\n  const hour = today.getHours();\n  const min = today.getMinutes();\n  const sec = today.getSeconds();\n  return `${year}/${month}/${date}  ${hour}:${min}:${sec}`;\n}\n\n// Composant principal Modifybook\nfunction Modifybook() {\n  _s();\n  const [currentDate] = useState(getDate()); // Utilisation du hook useState pour gérer la date actuelle\n  const location = useLocation(); // Utilisation du hook useLocation pour obtenir l'URL actuelle\n\n  // Extraction de l'ID du livre à partir de l'URL\n  const bookId = location.pathname.split(\"/\")[2];\n\n  // Utilisation du hook useState pour gérer l'état des valeurs du livre (titre, auteur, note, date)\n  const [values, setValues] = useState({\n    titre: '',\n    auteur: '',\n    note: '',\n    date: currentDate\n  });\n  const navigate = useNavigate(); // Utilisation du hook useNavigate pour la navigation\n  axios.defaults.withCredentials = true;\n\n  // Fonction appelée lors de la soumission du formulaire de modification\n  function handleSubmit(event) {\n    event.preventDefault();\n    try {\n      // Envoie une requête PUT pour modifier le livre avec l'ID spécifié\n      axios.put(`http://localhost:8800/modifybook/${bookId}`, values).then(() => navigate('/Homepage')) // Redirige vers la page d'accueil après la modification\n      .catch(err => console.log(err));\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  // Rendu du composant\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add_book\",\n      children: \"Ajouter un livre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      id: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group1\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"Titre\",\n          id: \"label\",\n          children: \"Titre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"Titre\",\n          placeholder: \"Titre\",\n          id: \"input\",\n          onChange: e => setValues({\n            ...values,\n            titre: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group1\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"Auteur\",\n          id: \"label\",\n          children: \"Auteur\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"Auteur\",\n          placeholder: \"Auteur\",\n          id: \"input\",\n          onChange: e => setValues({\n            ...values,\n            auteur: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group1\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"Note\",\n          id: \"label\",\n          children: \"Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"Note\",\n          placeholder: \"Note\",\n          id: \"input\",\n          onChange: e => setValues({\n            ...values,\n            note: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group1\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"Date\",\n          id: \"label\",\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"Date\",\n          id: \"input\",\n          value: currentDate,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group\",\n        id: \"add\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add_button\",\n          children: \"Modifier\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(Modifybook, \"H2JZShkAdOl777ptov4f/dRk4v0=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Modifybook;\nexport default Modifybook; // Export du composant Modifybook\nvar _c;\n$RefreshReg$(_c, \"Modifybook\");","map":{"version":3,"names":["React","useState","useLocation","useNavigate","axios","jsxDEV","_jsxDEV","getDate","today","Date","month","getMonth","year","getFullYear","date","hour","getHours","min","getMinutes","sec","getSeconds","Modifybook","_s","currentDate","location","bookId","pathname","split","values","setValues","titre","auteur","note","navigate","defaults","withCredentials","handleSubmit","event","preventDefault","put","then","catch","err","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","id","htmlFor","name","placeholder","onChange","e","target","value","type","readOnly","_c","$RefreshReg$"],"sources":["C:/code/app-librairie/frontend/src/Pages/Modifybook.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport '../Addbook.css'; // Import du fichier de style CSS\r\nimport axios from \"axios\"; // Import du module axios pour effectuer des requêtes HTTP\r\n\r\n// Fonction qui retourne la date et l'heure actuelles au format YYYY/MM/DD HH:MM:SS\r\nfunction getDate() {\r\n    const today = new Date();\r\n    const month = today.getMonth() + 1;\r\n    const year = today.getFullYear();\r\n    const date = today.getDate();\r\n    const hour = today.getHours();\r\n    const min = today.getMinutes();\r\n    const sec = today.getSeconds();\r\n    return `${year}/${month}/${date}  ${hour}:${min}:${sec}`;\r\n}\r\n\r\n// Composant principal Modifybook\r\nfunction Modifybook() {\r\n    const [currentDate] = useState(getDate()); // Utilisation du hook useState pour gérer la date actuelle\r\n    const location = useLocation(); // Utilisation du hook useLocation pour obtenir l'URL actuelle\r\n    \r\n    // Extraction de l'ID du livre à partir de l'URL\r\n    const bookId = location.pathname.split(\"/\")[2];\r\n\r\n    // Utilisation du hook useState pour gérer l'état des valeurs du livre (titre, auteur, note, date)\r\n    const [values, setValues] = useState({\r\n        titre: '',\r\n        auteur: '',\r\n        note: '',\r\n        date: currentDate\r\n    });\r\n\r\n    const navigate = useNavigate(); // Utilisation du hook useNavigate pour la navigation\r\n    axios.defaults.withCredentials = true;\r\n\r\n    // Fonction appelée lors de la soumission du formulaire de modification\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        try {\r\n            // Envoie une requête PUT pour modifier le livre avec l'ID spécifié\r\n            axios.put(`http://localhost:8800/modifybook/${bookId}`, values)\r\n                .then(() => navigate('/Homepage')) // Redirige vers la page d'accueil après la modification\r\n                .catch(err => console.log(err));\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    // Rendu du composant\r\n    return (\r\n        <body>\r\n            {/* Formulaire de modification de livre */}\r\n            <div className=\"add_book\">Ajouter un livre</div>\r\n            <form onSubmit={handleSubmit} id=\"form\">\r\n                {/* Champ pour saisir le titre du livre */}\r\n                <div className=\"group1\">\r\n                    <label htmlFor=\"Titre\" id=\"label\">Titre</label>\r\n                    <input\r\n                        name=\"Titre\"\r\n                        placeholder=\"Titre\"\r\n                        id=\"input\"\r\n                        onChange={e => setValues({ ...values, titre: e.target.value })}\r\n                    />\r\n                </div>\r\n                {/* Champ pour saisir l'auteur du livre */}\r\n                <div className=\"group1\">\r\n                    <label htmlFor=\"Auteur\" id=\"label\">Auteur</label>\r\n                    <input\r\n                        name=\"Auteur\"\r\n                        placeholder=\"Auteur\"\r\n                        id=\"input\"\r\n                        onChange={e => setValues({ ...values, auteur: e.target.value })}\r\n                    />\r\n                </div>\r\n                {/* Zone de texte pour saisir la note du livre */}\r\n                <div className=\"group1\">\r\n                    <label htmlFor=\"Note\" id=\"label\">Note</label>\r\n                    <textarea\r\n                        name=\"Note\"\r\n                        placeholder=\"Note\"\r\n                        id=\"input\"\r\n                        onChange={e => setValues({ ...values, note: e.target.value })}\r\n                    />\r\n                </div>\r\n                {/* Champ en lecture seule pour afficher la date actuelle */}\r\n                <div className=\"group1\">\r\n                    <label htmlFor=\"Date\" id=\"label\">Date</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"Date\"\r\n                        id=\"input\"\r\n                        value={currentDate}\r\n                        readOnly\r\n                    />\r\n                </div>\r\n                {/* Bouton pour soumettre le formulaire de modification */}\r\n                <div className=\"group\" id=\"add\">\r\n                    <button className=\"add_button\">Modifier</button>\r\n                </div>\r\n            </form>\r\n        </body>\r\n    );\r\n}\r\n\r\nexport default Modifybook; // Export du composant Modifybook"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}